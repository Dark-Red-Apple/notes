{"version":3,"file":"genericbutton.js","mappings":";;;;;;;;;;;;;;;AAAmD;;AAEnD;AACA;AACA;AACkD;AAClD,aAAa,iEAAa,CAAC,sDAAG;AAC9B;AACA;AACA,CAAC,EAAE,iEAAa,CAAC,uDAAI;AACrB;AACA,CAAC;AACD,+DAAe,IAAI,EAAC;AACpB;;;;;;;;;;;ACbA,MAAMA,SAAS,GAAG,CACd;EAACC,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAS,CAAC,EAChC;EAACD,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAS,CAAC,EAClC;EAACD,IAAI,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAS,CAAC,CAC1C;AAED,+DAAeF,SAAS;;;;;;;;;;ACNxB;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;ACNA;AACmD;AACqG;AAClC;AACtH;AACsC;AACtC;AAC2C;AACH;AAExCG,oEAAiB,CAAC,6BAA6B,EAAE;EAC7CgB,KAAK,EAAE,gBAAgB;EACvBC,UAAU,EAAE;IACRC,IAAI,EAAE;MAACC,IAAI,EAAE;IAAQ,CAAC;IACtBC,IAAI,EAAE;MAACD,IAAI,EAAE,QAAQ;MAAEE,OAAO,EAAE;IAAO,CAAC;IACxC;IACAC,UAAU,EAAE;MAACH,IAAI,EAAE,QAAQ;MAAEE,OAAO,EAAE;QAACE,GAAG,EAAE;MAAE;IAAC,CAAC;IAChDC,SAAS,EAAE;MAACL,IAAI,EAAE,QAAQ;MAAEE,OAAO,EAAE;IAAM;EAC/C,CAAC;EACDI,IAAI,EAAEC,aAAa;EACnBC,IAAI,EAAEC;AACV,CAAC,CAAC;AAEF,SAASF,aAAaA,CAACG,KAAK,EAAC;EACzB;EACA,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGhB,4DAAQ,CAAC,KAAK,CAAC;EAErE,SAASiB,gBAAgBA,CAACC,CAAC,EAAC;IACxB;IACAJ,KAAK,CAACK,aAAa,CAAC;MAAChB,IAAI,EAAEe;IAAC,CAAC,CAAC;EAClC;EAEA,SAASE,aAAaA,CAAA,EAAE;IACpB;IACAJ,sBAAsB,CAACK,IAAI,IAAI,CAACA,IAAI,CAAC;EAEzC;EAEA,SAASC,gBAAgBA,CAACC,OAAO,EAAC;IAC9BT,KAAK,CAACK,aAAa,CAAC;MAACZ,UAAU,EAAEgB;IAAO,CAAC,CAAC;EAC9C;EAEA,SAASC,iBAAiBA,CAACC,SAAS,EAAC;IACjC;IACA,MAAM;MAAC1C;IAAI,CAAC,GAAGQ,mFAA0B,CAACT,sDAAS,EAAE2C,SAAS,CAAC;IAC/DC,OAAO,CAACC,GAAG,CAAC5C,IAAI,CAAC;IACjB+B,KAAK,CAACK,aAAa,CAAC;MAACV,SAAS,EAAE1B;IAAI,CAAC,CAAC;EAC1C;EAEA,MAAM6C,iBAAiB,GAAG9C,6DAAgB,CAACE,KAAK,IAAI;IAChD,OAAOA,KAAK,CAACD,IAAI,IAAI+B,KAAK,CAACZ,UAAU,CAACO,SAAS;EACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAACzB,KAAK;EAEX,OACI8C,iEAAA,CAAAC,wDAAA,QACID,iEAAA,CAAC1C,kEAAa,QACV0C,iEAAA,CAACtC,+DAAY,QACTsC,iEAAA,CAACrC,gEAAa;IAACuC,OAAO,EAAEZ,aAAc;IAACa,IAAI,EAAElC,wDAAIA;EAAC,EAAG,CAC1C,EACf+B,iEAAA,CAACtC,+DAAY,QACTsC,iEAAA,CAACrC,gEAAa;IAACyC,SAAS,EAAEpB,KAAK,CAACZ,UAAU,CAACG,IAAI,KAAK,OAAQ;IAAC2B,OAAO,EAAEA,CAAA,KAAKlB,KAAK,CAACK,aAAa,CAAC;MAACd,IAAI,EAAE;IAAO,CAAC;EAAE,GAAC,OAAK,CAAgB,EACtIyB,iEAAA,CAACrC,gEAAa;IAACyC,SAAS,EAAEpB,KAAK,CAACZ,UAAU,CAACG,IAAI,KAAK,QAAS;IAAC2B,OAAO,EAAEA,CAAA,KAAKlB,KAAK,CAACK,aAAa,CAAC;MAACd,IAAI,EAAE;IAAQ,CAAC;EAAE,GAAC,QAAM,CAAgB,EACzIyB,iEAAA,CAACrC,gEAAa;IAACyC,SAAS,EAAEpB,KAAK,CAACZ,UAAU,CAACG,IAAI,KAAK,OAAQ;IAAC2B,OAAO,EAAEA,CAAA,KAAKlB,KAAK,CAACK,aAAa,CAAC;MAACd,IAAI,EAAE;IAAO,CAAC;EAAE,GAAC,OAAK,CAAgB,CAC3H,CACH,EAChByB,iEAAA,CAAC3C,sEAAiB,QACd2C,iEAAA,CAAClC,4DAAS;IAACK,KAAK,EAAC,OAAO;IAACkC,WAAW,EAAE;EAAK,GACvCL,iEAAA,CAACjC,2DAAQ,QACLiC,iEAAA,CAAChC,+DAAY;IAACsC,mBAAmB,EAAI,IAAK;IAACC,SAAS,EAAI,KAAM;IAACC,MAAM,EAAExD,sDAAU;IAACyD,KAAK,EAAEX,iBAAkB;IAACY,QAAQ,EAAEhB;EAAkB,EAAG,CACpI,CACH,CACI,EACpBM,iEAAA,CAAC5C,6DAAQ;IAACuD,cAAc,EAAE,EAAG;IAACC,OAAO,EAAC,GAAG;IAACC,SAAS,EAAG,YAAW7B,KAAK,CAACZ,UAAU,CAACO,SAAU,SAAQK,KAAK,CAACZ,UAAU,CAACG,IAAK,EAAE;IAACkC,KAAK,EAAEzB,KAAK,CAACZ,UAAU,CAACC,IAAK;IAACqC,QAAQ,EAAEvB;EAAiB,EAAG,EACxLF,mBAAmB,IAChBe,iEAAA,CAACpC,0DAAO;IAACkD,QAAQ,EAAC;EAAe,GAC7Bd,iEAAA,CAACxC,8EAAW;IAACuD,QAAQ,EAAE,EAAG;IAACN,KAAK,EAAEzB,KAAK,CAACZ,UAAU,CAACK,UAAW;IAACiC,QAAQ,EAAElB;EAAiB,EAAG,EAC7FQ,iEAAA,CAACnC,yDAAM;IAACmD,OAAO,EAAC,SAAS;IAACd,OAAO,EAAEA,CAAA,KAAKhB,sBAAsB,CAAC,KAAK,CAAE;IAAC+B,KAAK,EAAE;MAACC,OAAO,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAM;EAAE,GAAC,cAAY,CAAS,CAE7I,CAGF;AAEX;AAEA,SAASpC,aAAaA,CAACC,KAAK,EAAC;EACzB;EACA,OACIgB,iEAAA;IAAGoB,IAAI,EAAEpC,KAAK,CAACZ,UAAU,CAACK,UAAU,CAACC,GAAI;IAACmC,SAAS,EAAG,YAAW7B,KAAK,CAACZ,UAAU,CAACG,IAAK,SAAQS,KAAK,CAACZ,UAAU,CAACO,SAAU;EAAE,GAC3HK,KAAK,CAACZ,UAAU,CAACC,IAAI,CAClB;AAEZ,C","sources":["webpack://fictional-university-theme/./node_modules/@wordpress/icons/build-module/library/link.js","webpack://fictional-university-theme/./inc/ourColors.js","webpack://fictional-university-theme/external window [\"wp\",\"blockEditor\"]","webpack://fictional-university-theme/external window [\"wp\",\"blocks\"]","webpack://fictional-university-theme/external window [\"wp\",\"components\"]","webpack://fictional-university-theme/external window [\"wp\",\"element\"]","webpack://fictional-university-theme/external window [\"wp\",\"primitives\"]","webpack://fictional-university-theme/webpack/bootstrap","webpack://fictional-university-theme/webpack/runtime/compat get default export","webpack://fictional-university-theme/webpack/runtime/define property getters","webpack://fictional-university-theme/webpack/runtime/hasOwnProperty shorthand","webpack://fictional-university-theme/webpack/runtime/make namespace object","webpack://fictional-university-theme/./our-blocks/genericbutton.js"],"sourcesContent":["import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst link = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M15.6 7.2H14v1.5h1.6c2 0 3.7 1.7 3.7 3.7s-1.7 3.7-3.7 3.7H14v1.5h1.6c2.8 0 5.2-2.3 5.2-5.2 0-2.9-2.3-5.2-5.2-5.2zM4.7 12.4c0-2 1.7-3.7 3.7-3.7H10V7.2H8.4c-2.9 0-5.2 2.3-5.2 5.2 0 2.9 2.3 5.2 5.2 5.2H10v-1.5H8.4c-2 0-3.7-1.7-3.7-3.7zm4.6.9h5.3v-1.5H9.3v1.5z\"\n}));\nexport default link;\n//# sourceMappingURL=link.js.map","const ourColors = [\r\n    {name: \"blue\", color: \"#0d3b66\"},\r\n    {name: \"orange\", color: \"#ee964b\"},\r\n    {name: \"dark-orange\", color: \"#f95738\"},\r\n]\r\n\r\nexport default ourColors","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"primitives\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//this is optional: not to use wp.blocks.registerBlockType\r\nimport {registerBlockType} from \"@wordpress/blocks\"\r\nimport {RichText, InspectorControls, BlockControls, __experimentalLinkControl as LinkControl, getColorObjectByColorValue} from \"@wordpress/block-editor\"\r\nimport {ToolbarGroup, ToolbarButton, Popover, Button, PanelBody, PanelRow, ColorPalette}  from \"@wordpress/components\"\r\n// import link icon\r\nimport {link } from \"@wordpress/icons\"\r\n// element is an alias react here but for abstraction layer if they want to use another library in the future \r\nimport {useState} from \"@wordpress/element\"\r\nimport ourColors from '../inc/ourColors'\r\n\r\nregisterBlockType(\"ourblocktheme/genericbutton\", {\r\n    title: \"Generic Button\",\r\n    attributes: {\r\n        text: {type: \"string\"},\r\n        size: {type: \"string\", default: \"large\"},\r\n        // multiple pieces as object is stored via linkControl, like id, url, if you don't add default it will not work\r\n        linkObject: {type: \"object\", default: {url: \"\"}},\r\n        colorName: {type: \"string\", default: \"blue\"}\r\n    },\r\n    edit: EditComponent,\r\n    save: SaveComponent\r\n})\r\n\r\nfunction EditComponent(props){\r\n    // we don't want to store it in db, use state    \r\n    const [isLinkPickerVisible, setIsLinkPickerVisible] = useState(false)\r\n\r\n    function handleTextChange(x){\r\n        //s is needed attributes\r\n        props.setAttributes({text: x})\r\n    }\r\n\r\n    function buttonHandler(){\r\n        // the opposite of previous value to toggle\r\n        setIsLinkPickerVisible(prev => !prev)\r\n        \r\n    }\r\n\r\n    function handleLinkChange(newLink){\r\n        props.setAttributes({linkObject: newLink})\r\n    }\r\n\r\n    function handleColorChange(colorCode){\r\n        // from the hex value that the color palette gives us, we need to find its color name\r\n        const {name} = getColorObjectByColorValue(ourColors, colorCode)\r\n        console.log(name)\r\n        props.setAttributes({colorName: name})\r\n    }\r\n\r\n    const currentColorValue = ourColors.filter(color => {\r\n        return color.name == props.attributes.colorName\r\n    })[0].color\r\n\r\n    return(\r\n        <>\r\n            <BlockControls>\r\n                <ToolbarGroup>\r\n                    <ToolbarButton onClick={buttonHandler} icon={link} />\r\n                </ToolbarGroup>\r\n                <ToolbarGroup>\r\n                    <ToolbarButton isPressed={props.attributes.size === \"large\"} onClick={()=> props.setAttributes({size: \"large\"})}>Large</ToolbarButton>\r\n                    <ToolbarButton isPressed={props.attributes.size === \"medium\"} onClick={()=> props.setAttributes({size: \"medium\"})}>Medium</ToolbarButton>\r\n                    <ToolbarButton isPressed={props.attributes.size === \"small\"} onClick={()=> props.setAttributes({size: \"small\"})}>Small</ToolbarButton>\r\n                </ToolbarGroup>\r\n            </BlockControls>\r\n            <InspectorControls>\r\n                <PanelBody title=\"Color\" initialOpen={true}>\r\n                    <PanelRow>\r\n                        <ColorPalette disableCustomColors = {true} clearable = {false} colors={ourColors} value={currentColorValue} onChange={handleColorChange} />\r\n                    </PanelRow>\r\n                </PanelBody>\r\n            </InspectorControls>\r\n            <RichText allowedFormats={[]} tagName=\"a\" className={`btn btn--${props.attributes.colorName} btn--${props.attributes.size}`} value={props.attributes.text} onChange={handleTextChange} />\r\n            {isLinkPickerVisible && (\r\n                <Popover position=\"middle center\">\r\n                    <LinkControl settings={[]} value={props.attributes.linkObject} onChange={handleLinkChange} />\r\n                    <Button variant=\"primary\" onClick={()=> setIsLinkPickerVisible(false)} style={{display: \"block\", width: \"100%\"}}>Confirm Link</Button>\r\n                </Popover>\r\n            )\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nfunction SaveComponent(props){\r\n    //richtext not needed if we wont have nested inner elements like strong, italic\r\n    return(\r\n        <a href={props.attributes.linkObject.url} className={`btn btn--${props.attributes.size} btn--${props.attributes.colorName}`} >\r\n        {props.attributes.text}\r\n        </a>\r\n    )\r\n}\r\n"],"names":["ourColors","name","color","registerBlockType","RichText","InspectorControls","BlockControls","__experimentalLinkControl","LinkControl","getColorObjectByColorValue","ToolbarGroup","ToolbarButton","Popover","Button","PanelBody","PanelRow","ColorPalette","link","useState","title","attributes","text","type","size","default","linkObject","url","colorName","edit","EditComponent","save","SaveComponent","props","isLinkPickerVisible","setIsLinkPickerVisible","handleTextChange","x","setAttributes","buttonHandler","prev","handleLinkChange","newLink","handleColorChange","colorCode","console","log","currentColorValue","filter","createElement","Fragment","onClick","icon","isPressed","initialOpen","disableCustomColors","clearable","colors","value","onChange","allowedFormats","tagName","className","position","settings","variant","style","display","width","href"],"sourceRoot":""}